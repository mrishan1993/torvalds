import type { FlowAddress } from "@rarible/types";
import type { FlowContractAddressName } from "../common/flow-address";
import type { FlowContractName, FlowFee, FlowNetwork } from "../types";
export declare const MIN_ORDER_PRICE = "0.0001";
export declare type FlowConfigData = {
    /**
     * additional contracts deployed in main collection
     */
    contractsNames: FlowContractAddressName[];
    /**
     * is mint/burn/transfer avaliable in collection
     */
    mintable: boolean;
};
export declare const flowCollectionsConfig: Record<string, FlowConfigData>;
export declare const CONFIGS: Record<FlowNetwork, Config>;
declare type Config = {
    flowApiBasePath: string;
    walletDiscovery: string;
    accessNode: string;
    challengeHandshake: string;
    protocolFee: FlowFee;
    mainAddressMap: Record<FlowContractName, FlowAddress>;
};
export declare enum EmulatorCollections {
    RARIBLE = "A.0xf8d6e0586b0a20c7.RaribleNFT",
    MOTOGP = "A.0xf8d6e0586b0a20c7.MotoGPCard",
    EVOLUTION = "A.0xf8d6e0586b0a20c7.Evolution",
    TOPSHOT = "A.0xf8d6e0586b0a20c7.TopShot",
    MUGENNFT = "A.0xf8d6e0586b0a20c7.MugenNFT",
    CNNNFT = "A.0xf8d6e0586b0a20c7.CNN_NFT"
}
export declare enum TestnetCollections {
    RARIBLE = "A.ebf4ae01d1284af8.RaribleNFT",
    MOTOGP = "A.01658d9b94068f3c.MotoGPCard",
    EVOLUTION = "A.01658d9b94068f3c.Evolution",
    TOPSHOT = "A.01658d9b94068f3c.TopShot",
    MUGENNFT = "A.ebf4ae01d1284af8.MugenNFT",
    CNNNFT = "A.ebf4ae01d1284af8.CNN_NFT"
}
export declare enum MainnetCollections {
    RARIBLE = "A.01ab36aaf654a13e.RaribleNFT",
    MOTOGP = "A.a49cc0ee46c54bfb.MotoGPCard",
    EVOLUTION = "A.f4264ac8f3256818.Evolution",
    TOPSHOT = "A.0b2a3299cc857e29.TopShot",
    MUGENNFT = "A.2cd46d41da4ce262.MugenNFT",
    CNNNFT = "A.329feb3ab062d289.CNN_NFT"
}
export {};
