"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainnetCollections = exports.TestnetCollections = exports.EmulatorCollections = exports.CONFIGS = exports.flowCollectionsConfig = exports.MIN_ORDER_PRICE = void 0;
var types_1 = require("@rarible/types");
var network_1 = require("./network");
exports.MIN_ORDER_PRICE = "0.0001";
exports.flowCollectionsConfig = {
    RaribleNFT: {
        contractsNames: ["RaribleOrder", "RaribleNFT", "LicensedNFT", "RaribleFee"],
        mintable: true,
    },
    MotoGPCard: {
        contractsNames: ["MotoGPCard"],
        mintable: false,
    },
    Evolution: {
        contractsNames: ["Evolution"],
        mintable: false,
    },
    TopShot: {
        contractsNames: ["TopShot"],
        mintable: false,
    },
    MugenNFT: {
        contractsNames: ["MugenNFT"],
        mintable: false,
    },
    CNN_NFT: {
        contractsNames: ["CNN_NFT"],
        mintable: false,
    },
};
var MAINNET_RARIBLE_ADDRESS = (0, types_1.toFlowAddress)("0x01ab36aaf654a13e");
var TESTNET_RARIBLE_ADDRESS = (0, types_1.toFlowAddress)("0xebf4ae01d1284af8");
var EMULATOR_ADDRESS = (0, types_1.toFlowAddress)("0xf8d6e0586b0a20c7");
// protocol fee in base points
var PROTOCOL_FEE = (0, types_1.toBigNumber)("250");
// todo move contracts address to fcl.config aliases  if it's possible
exports.CONFIGS = {
    emulator: {
        flowApiBasePath: "127.0.0.1:3569",
        walletDiscovery: "",
        accessNode: "127.0.0.1:3569",
        challengeHandshake: "",
        protocolFee: { account: EMULATOR_ADDRESS, value: PROTOCOL_FEE },
        mainAddressMap: {
            NonFungibleToken: EMULATOR_ADDRESS,
            FungibleToken: (0, types_1.toFlowAddress)("0xee82856bf20e2aa6"),
            FlowToken: (0, types_1.toFlowAddress)("0x0ae53cb6e3f42a79"),
            FUSD: EMULATOR_ADDRESS,
            NFTStorefront: EMULATOR_ADDRESS,
            MotoGPCard: EMULATOR_ADDRESS,
            Evolution: EMULATOR_ADDRESS,
            TopShot: EMULATOR_ADDRESS,
            TopShotFee: EMULATOR_ADDRESS,
            RaribleFee: EMULATOR_ADDRESS,
            RaribleOrder: EMULATOR_ADDRESS,
            LicensedNFT: EMULATOR_ADDRESS,
            RaribleNFT: EMULATOR_ADDRESS,
            RaribleOpenBid: EMULATOR_ADDRESS,
            MugenNFT: EMULATOR_ADDRESS,
            CNN_NFT: EMULATOR_ADDRESS,
        },
    },
    testnet: {
        flowApiBasePath: "https://flow-api-dev.rarible.com",
        protocolFee: { account: TESTNET_RARIBLE_ADDRESS, value: PROTOCOL_FEE },
        walletDiscovery: "",
        accessNode: network_1.blocktoWallet.testnet.accessNode,
        challengeHandshake: network_1.blocktoWallet.testnet.wallet,
        mainAddressMap: {
            NonFungibleToken: (0, types_1.toFlowAddress)("0x631e88ae7f1d7c20"),
            FungibleToken: (0, types_1.toFlowAddress)("0x9a0766d93b6608b7"),
            FUSD: (0, types_1.toFlowAddress)("0xe223d8a629e49c68"),
            FlowToken: (0, types_1.toFlowAddress)("0x7e60df042a9c0868"),
            NFTStorefront: (0, types_1.toFlowAddress)("0x94b06cfca1d8a476"),
            MotoGPCard: (0, types_1.toFlowAddress)("0x01658d9b94068f3c"),
            Evolution: (0, types_1.toFlowAddress)("0x01658d9b94068f3c"),
            TopShot: (0, types_1.toFlowAddress)("0x01658d9b94068f3c"),
            TopShotFee: TESTNET_RARIBLE_ADDRESS,
            RaribleFee: TESTNET_RARIBLE_ADDRESS,
            RaribleOrder: TESTNET_RARIBLE_ADDRESS,
            RaribleNFT: TESTNET_RARIBLE_ADDRESS,
            LicensedNFT: TESTNET_RARIBLE_ADDRESS,
            RaribleOpenBid: TESTNET_RARIBLE_ADDRESS,
            MugenNFT: TESTNET_RARIBLE_ADDRESS,
            CNN_NFT: TESTNET_RARIBLE_ADDRESS,
        },
    },
    mainnet: {
        flowApiBasePath: "https://flow-api.rarible.com",
        walletDiscovery: "",
        accessNode: network_1.blocktoWallet.mainnet.accessNode,
        challengeHandshake: network_1.blocktoWallet.mainnet.wallet,
        protocolFee: { account: (0, types_1.toFlowAddress)("0x7f599d6dd7fd7e7b"), value: PROTOCOL_FEE },
        mainAddressMap: {
            NonFungibleToken: (0, types_1.toFlowAddress)("0x1d7e57aa55817448"),
            FungibleToken: (0, types_1.toFlowAddress)("0xf233dcee88fe0abe"),
            FUSD: (0, types_1.toFlowAddress)("0x3c5959b568896393"),
            FlowToken: (0, types_1.toFlowAddress)("0x1654653399040a61"),
            NFTStorefront: (0, types_1.toFlowAddress)("0x4eb8a10cb9f87357"),
            MotoGPCard: (0, types_1.toFlowAddress)("0xa49cc0ee46c54bfb"),
            Evolution: (0, types_1.toFlowAddress)("0xf4264ac8f3256818"),
            TopShot: (0, types_1.toFlowAddress)("0b2a3299cc857e29"),
            TopShotFee: (0, types_1.toFlowAddress)("0xbd69b6abdfcf4539"),
            RaribleFee: MAINNET_RARIBLE_ADDRESS,
            RaribleOrder: MAINNET_RARIBLE_ADDRESS,
            RaribleNFT: MAINNET_RARIBLE_ADDRESS,
            LicensedNFT: MAINNET_RARIBLE_ADDRESS,
            RaribleOpenBid: MAINNET_RARIBLE_ADDRESS,
            MugenNFT: (0, types_1.toFlowAddress)("0x2cd46d41da4ce262"),
            CNN_NFT: (0, types_1.toFlowAddress)("0x329feb3ab062d289"),
        },
    },
};
var EmulatorCollections;
(function (EmulatorCollections) {
    EmulatorCollections["RARIBLE"] = "A.0xf8d6e0586b0a20c7.RaribleNFT";
    EmulatorCollections["MOTOGP"] = "A.0xf8d6e0586b0a20c7.MotoGPCard";
    EmulatorCollections["EVOLUTION"] = "A.0xf8d6e0586b0a20c7.Evolution";
    EmulatorCollections["TOPSHOT"] = "A.0xf8d6e0586b0a20c7.TopShot";
    EmulatorCollections["MUGENNFT"] = "A.0xf8d6e0586b0a20c7.MugenNFT";
    EmulatorCollections["CNNNFT"] = "A.0xf8d6e0586b0a20c7.CNN_NFT";
})(EmulatorCollections = exports.EmulatorCollections || (exports.EmulatorCollections = {}));
var TestnetCollections;
(function (TestnetCollections) {
    TestnetCollections["RARIBLE"] = "A.ebf4ae01d1284af8.RaribleNFT";
    TestnetCollections["MOTOGP"] = "A.01658d9b94068f3c.MotoGPCard";
    TestnetCollections["EVOLUTION"] = "A.01658d9b94068f3c.Evolution";
    TestnetCollections["TOPSHOT"] = "A.01658d9b94068f3c.TopShot";
    TestnetCollections["MUGENNFT"] = "A.ebf4ae01d1284af8.MugenNFT";
    TestnetCollections["CNNNFT"] = "A.ebf4ae01d1284af8.CNN_NFT";
})(TestnetCollections = exports.TestnetCollections || (exports.TestnetCollections = {}));
var MainnetCollections;
(function (MainnetCollections) {
    MainnetCollections["RARIBLE"] = "A.01ab36aaf654a13e.RaribleNFT";
    MainnetCollections["MOTOGP"] = "A.a49cc0ee46c54bfb.MotoGPCard";
    MainnetCollections["EVOLUTION"] = "A.f4264ac8f3256818.Evolution";
    MainnetCollections["TOPSHOT"] = "A.0b2a3299cc857e29.TopShot";
    MainnetCollections["MUGENNFT"] = "A.2cd46d41da4ce262.MugenNFT";
    MainnetCollections["CNNNFT"] = "A.329feb3ab062d289.CNN_NFT";
})(MainnetCollections = exports.MainnetCollections || (exports.MainnetCollections = {}));
