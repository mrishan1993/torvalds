"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFlowRaribleNftRoyalties = void 0;
var tslib_1 = require("tslib");
var flow_sdk_scripts_1 = require("@rarible/flow-sdk-scripts");
var t = (0, tslib_1.__importStar)(require("@onflow/types"));
var types_1 = require("@rarible/types");
var transaction_1 = require("../../common/transaction");
var config_1 = require("../../config/config");
function getFlowRaribleNftRoyalties(fcl, network, owner, tokenId) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
        var params, borrow;
        return (0, tslib_1.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    params = {
                        cadence: flow_sdk_scripts_1.RaribleNFT.borrow_nft,
                        args: fcl.args([fcl.arg(owner, t.Address), fcl.arg(tokenId, t.UInt64)]),
                    };
                    return [4 /*yield*/, (0, transaction_1.runScript)(fcl, params, config_1.CONFIGS[network].mainAddressMap)];
                case 1:
                    borrow = _a.sent();
                    return [2 /*return*/, borrow.royalties.map(function (r) { return ({ account: (0, types_1.toFlowAddress)(r.address), value: (0, types_1.toBigNumber)(r.fee) }); })];
            }
        });
    });
}
exports.getFlowRaribleNftRoyalties = getFlowRaribleNftRoyalties;
