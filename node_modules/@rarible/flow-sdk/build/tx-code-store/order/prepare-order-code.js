"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.prepareOrderCode = void 0;
var cadence_code_config_1 = require("../../config/cadence-code-config");
var template_replacer_1 = require("../../common/template-replacer");
function prepareOrderCode(code, collectionName, currency) {
    var ftData;
    switch (currency) {
        case "FLOW":
            ftData = (0, cadence_code_config_1.getFtCodeConfig)("FlowToken");
            break;
        case "FUSD":
            ftData = (0, cadence_code_config_1.getFtCodeConfig)("FUSD");
            break;
        default:
            throw new Error("Unsupported currency");
    }
    var nftCodeData;
    switch (collectionName) {
        case "RaribleNFT":
        case "TopShot":
        case "MotoGPCard":
        case "Evolution":
        case "MugenNFT":
        case "CNN_NFT":
            nftCodeData = (0, cadence_code_config_1.getNftCodeConfig)(collectionName);
            break;
        default:
            throw new Error("Unsupported collection");
    }
    var codeWithFt = (0, template_replacer_1.fillCodeTemplate)(code, ftData);
    return (0, template_replacer_1.fillCodeTemplate)(codeWithFt, nftCodeData);
}
exports.prepareOrderCode = prepareOrderCode;
