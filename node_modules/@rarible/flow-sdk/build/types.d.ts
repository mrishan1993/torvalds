import type { CommonFlowTransaction } from "@rarible/fcl-types/build";
import type { FlowRoyalty } from "@rarible/flow-api-client";
export declare type FlowCurrency = "FLOW" | "FUSD";
export declare type FlowNetwork = "emulator" | "testnet" | "mainnet";
export interface FlowFee extends FlowRoyalty {
}
export declare type FlowOriginFees = FlowFee[];
export declare type FlowPayouts = FlowFee[];
export declare type FlowContractName = NonFungibleTokenType | FungibleTokenType | FUSDType | FlowTokenType | NFTStorefrontType | MotoGPCardType | EvolutionType | TopShotType | RaribleFeeType | RaribleOrderType | RaribleNFTType | LicensedNFTType | TopShotFeeType | RaribleOpenBid | MugenNFT | CNN_NFT;
export declare type FungibleContracts = FUSDType | FlowTokenType;
export declare type NonFungibleContracts = RaribleNFTType | EvolutionType | MotoGPCardType | TopShotType | MugenNFT | CNN_NFT;
export declare type AuthWithPrivateKey = undefined | ((account?: any) => Promise<any>);
export interface FlowTransaction extends CommonFlowTransaction {
    txId: string;
}
export type { FlowEnv } from "./config/env";
export declare type NonFungibleTokenType = "NonFungibleToken";
export declare type FungibleTokenType = "FungibleToken";
export declare type FUSDType = "FUSD";
export declare type FlowTokenType = "FlowToken";
export declare type NFTStorefrontType = "NFTStorefront";
export declare type MotoGPCardType = "MotoGPCard";
export declare type EvolutionType = "Evolution";
export declare type TopShotType = "TopShot";
export declare type RaribleFeeType = "RaribleFee";
export declare type RaribleOrderType = "RaribleOrder";
export declare type RaribleNFTType = "RaribleNFT";
export declare type LicensedNFTType = "LicensedNFT";
export declare type TopShotFeeType = "TopShotFee";
export declare type RaribleOpenBid = "RaribleOpenBid";
export declare type MugenNFT = "MugenNFT";
export declare type CNN_NFT = "CNN_NFT";
