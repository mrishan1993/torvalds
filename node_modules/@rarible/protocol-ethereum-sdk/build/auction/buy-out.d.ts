import type { Maybe } from "@rarible/types/build/maybe";
import type { Ethereum, EthereumTransaction } from "@rarible/ethereum-provider";
import type { BigNumber } from "@rarible/types";
import type { Part } from "@rarible/ethereum-api-client";
import type { AuctionControllerApi } from "@rarible/ethereum-api-client";
import { Action } from "@rarible/action";
import type { EthereumConfig } from "../config/type";
import type { ApproveFunction } from "../order/approve";
export declare type BuyOutRequest = {
    auctionId: BigNumber;
    payouts: Part[];
    originFees: Part[];
};
export declare type BuyoutAuctionAction = Action<"approve" | "sign", BuyOutRequest, EthereumTransaction>;
export declare class BuyoutAuction {
    private readonly ethereum;
    private readonly config;
    private readonly approve;
    private readonly auctionApi;
    constructor(ethereum: Maybe<Ethereum>, config: EthereumConfig, approve: ApproveFunction, auctionApi: AuctionControllerApi);
    readonly buyout: BuyoutAuctionAction;
}
