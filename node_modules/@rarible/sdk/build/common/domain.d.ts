import type * as ApiClient from "@rarible/api-client";
import type { Action } from "@rarible/action";
import type { FlowContractAddress } from "@rarible/flow-sdk/build/common/flow-address";
import type { Address } from "@rarible/types";
export declare type CurrencyType = {
    blockchain: ApiClient.Blockchain;
    type: CurrencySubType;
};
export declare type CurrencySubType = "NATIVE" | "ERC20" | "TEZOS_FT";
export interface AbstractPrepareResponse<Id, In, Out> {
    submit: Action<Id, In, Out>;
}
export declare type RequestCurrency = ApiClient.EthErc20AssetType | ApiClient.EthEthereumAssetType | ApiClient.FlowAssetTypeNft | ApiClient.FlowAssetTypeFt | ApiClient.TezosXTZAssetType | ApiClient.TezosFTAssetType;
export declare type AbstractItemId<T extends ApiClient.Blockchain, ContractAddress extends string> = {
    blockchain: T;
    contract: ContractAddress;
    itemId: string;
};
export declare type FlowItemId = AbstractItemId<ApiClient.Blockchain.FLOW, FlowContractAddress>;
export declare type EthereumItemId = AbstractItemId<ApiClient.Blockchain.ETHEREUM, Address>;
export declare type TezosItemId = AbstractItemId<ApiClient.Blockchain.TEZOS, string>;
export declare type PolygonItemId = AbstractItemId<ApiClient.Blockchain.POLYGON, string>;
