"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlowBalance = void 0;
var tslib_1 = require("tslib");
var bn_1 = require("@rarible/utils/build/bn");
var converters_1 = require("./common/converters");
var FlowBalance = /** @class */ (function () {
    function FlowBalance(sdk) {
        this.sdk = sdk;
        this.getBalance = this.getBalance.bind(this);
    }
    FlowBalance.prototype.getFlowCurrency = function (assetType) {
        if (assetType["@type"] === "FLOW_FT") {
            return (0, converters_1.getFungibleTokenName)(assetType.contract);
        }
        throw new Error("Invalid asset type");
    };
    FlowBalance.prototype.getBalance = function (address, assetType) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var flowAddress, flowAsset, balance;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        flowAddress = (0, converters_1.parseFlowAddressFromUnionAddress)(address);
                        flowAsset = this.getFlowCurrency(assetType);
                        return [4 /*yield*/, this.sdk.wallet.getFungibleBalance(flowAddress, flowAsset)];
                    case 1:
                        balance = _a.sent();
                        return [2 /*return*/, (0, bn_1.toBn)(balance)];
                }
            });
        });
    };
    return FlowBalance;
}());
exports.FlowBalance = FlowBalance;
